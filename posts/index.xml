<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on The Tymscar Blog</title><link>/posts/</link><description>Recent content in Posts on The Tymscar Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 16 Aug 2025 12:10:22 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>I washed my Yubikey twice by accident. Here's how I saved it both times.</title><link>/posts/yubicowashingmachine/</link><pubDate>Sat, 16 Aug 2025 12:10:22 +0000</pubDate><guid>/posts/yubicowashingmachine/</guid><description>&lt;p>For the past five years, my Yubikey has been my digital companion. Every single day, I use it to sign my Git commits, authenticate into countless websites, and secure my most important accounts. It&amp;rsquo;s become such an integral part of my workflow that I barely think about it, until it&amp;rsquo;s not there.&lt;/p>
&lt;p>A couple of years ago, I made the classic mistake of leaving it in my jeans pocket before throwing them in the washing machine. When I discovered it hours later, soaking wet and seemingly lifeless, I thought I&amp;rsquo;d lost everything. But I managed to save it using a technique I&amp;rsquo;d learned from dealing with other water-damaged electronics.&lt;/p></description></item><item><title>Running OpenAI's GPT-OSS locally: the good, the bad, and the loopy</title><link>/posts/gptoss/</link><pubDate>Tue, 05 Aug 2025 20:20:00 +0000</pubDate><guid>/posts/gptoss/</guid><description>&lt;p>OpenAI recently launched something I didn&amp;rsquo;t expect to see from them: an open source model called &lt;a href="https://openai.com/index/introducing-gpt-oss/">GPT-OSS&lt;/a>. After years of keeping their models locked behind APIs, they&amp;rsquo;ve finally released both 20 billion and 120 billion parameter models that you can run entirely on your own hardware. Both can run on consumer grade hardware, but realistically most people would go with the 20 billion model since it fully fits into 16 gigs of VRAM on a GPU, which is why I went with that one as well.&lt;/p></description></item><item><title>Public Dotfiles, Private Secrets: My Nix OS Docker Workflow</title><link>/posts/nixosdockerwithsecrets/</link><pubDate>Sun, 15 Jun 2025 21:39:22 +0100</pubDate><guid>/posts/nixosdockerwithsecrets/</guid><description>&lt;p>For the longest time I ran every container in my homelab on Proxmox. It did the job, but because I use NixOS on my main workstation and NixDarwin on my laptop, I eventually wanted the lab to follow the same declarative model. A few months ago I switched those machines to NixOS as well. Everything went smoothly except for one thing: moving the containers themselves.&lt;/p>
&lt;p>The problem was secrets. I keep my entire configuration, including the lab, in a public &lt;a href="https://github.com/tymscar/dotfiles">dotfiles repository&lt;/a>. Many of the containers need tokens such as Cloudflare, API keys, you name it, that obviously must not end up on GitHub. Every time I sat down to migrate the stack I put it off for this single reason.&lt;/p></description></item><item><title>Using Nix to build JS/TS projects with private dependencies</title><link>/posts/nixprivatenpmrepos/</link><pubDate>Fri, 02 May 2025 16:50:41 +0000</pubDate><guid>/posts/nixprivatenpmrepos/</guid><description>&lt;p>&lt;img src="/nix-private-npm-repos/githubActioonsSuccess.png" alt="“Running code from a private repo”)">&lt;/p>
&lt;p>Nix is a great tool for building software, especially in professional settings because of the guarantees it comes with.&lt;br>
For example, you can be sure that the software you build is reproducible and that it will work on any machine.&lt;/p>
&lt;p>When it comes to building packages in the Nix world, you usually end up going with derivation builders already made for you.&lt;/p>
&lt;p>For Rust there is &lt;code>rustPlatform.buildRustPackage&lt;/code>, for Go there is &lt;code>go2nix&lt;/code>, for JS/TS there is &lt;code>node2nix&lt;/code>, and so on.&lt;/p></description></item><item><title>How to fix static noise on macOS headphones</title><link>/posts/macusbdacstatic/</link><pubDate>Tue, 07 May 2024 12:00:00 +0000</pubDate><guid>/posts/macusbdacstatic/</guid><description>&lt;p>A bit over a year ago, I bought a pair of &lt;a href="https://steelseries.com/gaming-headsets/arctis-nova-pro">Steelseries Arctis Nova Pro&lt;/a> headphones. They are amazing for what I need—they work great over 2.4 GHz, so I don&amp;rsquo;t experience noticeable latency like with Bluetooth, and I can connect four devices to the base station simultaneously. This is something I do daily when working on multiple computers.&lt;/p>
&lt;p>I never had any issues until I connected them to a Mac mini with an M2 processor. After an indeterminate amount of time, static noise started coming out of the headphones, getting progressively louder until they became unusable. Rebooting the headphones didn’t help, nor did changing the output device to something else and back again. If I hadn&amp;rsquo;t used them successfully on other devices, I would have assumed they were broken.&lt;/p></description></item><item><title>I wrote my Vision Pro killer app (Script Anchor)</title><link>/posts/scriptanchor/</link><pubDate>Sun, 21 Apr 2024 12:00:00 +0000</pubDate><guid>/posts/scriptanchor/</guid><description>&lt;h1 id="ive-always-like-vr">I&amp;rsquo;ve always like VR&lt;/h1>
&lt;p>For 15 years, I&amp;rsquo;ve been captivated by the possibilities of VR/AR. It all became real when I held my first Google Cardboard at Google I/O 2015—here&amp;rsquo;s the moment captured:&lt;/p>
&lt;p>&lt;img src="/script-anchor/google-cardboard.jpg" alt="My Google Cardboard">&lt;/p>
&lt;p>My professional and personal life has been deeply intertwined with virtual reality. I spent five fulfilling years harnessing VR&amp;rsquo;s potential at JLR, and for my Bachelor of Science First Class Honours degree at BCU, I pioneered an augmented reality project that allowed users to overlay virtual attractions onto the real world. Even outside of work, I&amp;rsquo;ve remained an avid VR enthusiast, frequently engaging with the best headsets out there, from the industry-celebrated Microsoft Hololens to the impressive capabilities of the less known Pimax 8K.&lt;/p></description></item><item><title>Simulating soapy water</title><link>/posts/soapsim/</link><pubDate>Thu, 04 Apr 2024 12:00:00 +0000</pubDate><guid>/posts/soapsim/</guid><description>&lt;p>Do you ever just scroll mindlessly online and stumble upon a satisfying video about physics and you can&amp;rsquo;t help but have that urge to reproduce it in code?&lt;/p>
&lt;p>No, just me? Well perhaps this blogpost isn&amp;rsquo;t for you then. Otherwise, buckle up!&lt;/p>
&lt;p>The experiment that caught my eye this time around was this video of a plate of water, with some pepper sprinkled on top uniformly, that when touched with a soapy finger, makes the pepper repel.&lt;/p></description></item><item><title>How to fix WSL2 crashing mid compile (Or any heavy IO)</title><link>/posts/wsloom/</link><pubDate>Tue, 30 Jan 2024 12:00:00 +0000</pubDate><guid>/posts/wsloom/</guid><description>&lt;p>Reminiscing with some friends about how long the compile times were on Gentoo back in the day when we used it, I got curious about how long it would take to compile Chromium today in WSL2 on an &lt;a href="https://www.intel.com/content/www/us/en/products/sku/230497/intel-core-i913900kf-processor-36m-cache-up-to-5-80-ghz/specifications.html">i9 13900KF CPU&lt;/a>. Back then, it used to take well over a day on my &lt;a href="https://ark.intel.com/content/www/us/en/ark/products/68316/intel-core-i5-3470-processor-6m-cache-up-to-3-60-ghz.html">i5 3470&lt;/a>.&lt;/p>
&lt;h1 id="getting-chromium-to-compile">Getting Chromium to compile&lt;/h1>
&lt;p>All you have to do to compile Chromium is follow the official Google build instructions &lt;a href="https://chromium.googlesource.com/chromium/src/&amp;#43;/main/docs/linux/build_instructions.md">here&lt;/a>:&lt;/p></description></item><item><title>Critical Alert - Tech Industry Must Act on Job Market Chaos!</title><link>/posts/jobhunting/</link><pubDate>Wed, 10 Jan 2024 12:31:42 +0000</pubDate><guid>/posts/jobhunting/</guid><description>&lt;h1 id="applying-to-a-job-is-a-broken-system">Applying to a job is a broken system&lt;/h1>
&lt;p>This blog post is a call to action, urging reform in the tech recruitment process. It&amp;rsquo;s a shared struggle, demanding change for a more efficient and promising future in our industry.&lt;/p>
&lt;h4 id="being-genuine-is-not-encouraged">Being genuine is not encouraged&lt;/h4>
&lt;p>&lt;img src="https://images.unsplash.com/photo-1434030216411-0b793f4b4173" alt="Cover letter">&lt;/p>
&lt;p>In the tech recruiting scene, a significant emphasis is placed on writing personalized cover letters. However, these letters, requiring genuine and thoughtful effort, are time-intensive to compose, sometimes demanding as much time as a full-time job, just for a chance at being noticed.&lt;/p></description></item><item><title>Playing around with Gaussian Splat</title><link>/posts/gaussiansplat/</link><pubDate>Fri, 29 Sep 2023 23:20:00 +0100</pubDate><guid>/posts/gaussiansplat/</guid><description>&lt;p>Photogrammetry has held my interest for a very long time. After all, &lt;a href="https://www.tymscar.com/assets/images/visualisations/ezgif.com-gif-maker285292.gif">my profile picture&lt;/a>, almost everywhere, is a LiDAR scan of my head that I accomplished with the FaceID of an old iPhone about five years ago.&lt;/p>
&lt;p>Recently, I stumbled upon &lt;a href="https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/3d_gaussian_splatting_high.pdf">a new paper about something called Gaussian Splatting&lt;/a>. This topic is fascinating because, instead of creating a 3D mesh, it more closely resembles a point cloud that is expanded and shaped in such a way that it looks highly realistic. One usecase that interests me in particular is bringing these in as VR backdrops.&lt;/p></description></item><item><title>How I deploy private GitHub projects to local self-hosted servers (CI/CD)</title><link>/posts/privategithubcicd/</link><pubDate>Sat, 12 Aug 2023 18:04:45 +0100</pubDate><guid>/posts/privategithubcicd/</guid><description>&lt;h1 id="how-i-deploy-private-github-projects-to-local-self-hosted-servers-cicd">How I deploy private GitHub projects to local self-hosted servers (CI/CD)&lt;/h1>
&lt;p>I have a lot of experience with massive CI/CD pipelines that deploy private code to public servers. I&amp;rsquo;ve also worked with pipelines that deploy public repositories to private servers, such as my homelab. However, I never experimented with a pipeline that takes a private GitHub repo, builds it, and deploys it to a server on the LAN. That&amp;rsquo;s precisely what I needed for a project I&amp;rsquo;m currently working on that isn&amp;rsquo;t yet public.&lt;/p></description></item><item><title>Running Jetbrains remote dev servers on NixOS</title><link>/posts/jetbrainsremotedevservernixos/</link><pubDate>Mon, 10 Jul 2023 00:33:45 +0100</pubDate><guid>/posts/jetbrainsremotedevservernixos/</guid><description>&lt;p>&lt;img src="/jb-nix-remote-server/project.png" alt="A remote project">&lt;/p>
&lt;p>EDIT: I have raised &lt;a href="https://github.com/NixOS/nixpkgs/pull/243533">a PR to fix this&lt;/a> upstream and got it merged, so you don&amp;rsquo;t have to follow the guide anymore, you can just use the package on nixpkgs unstable for the time being and later on in the future, a stable branch.&lt;/p>
&lt;p>For the past year or so I have been very interested in &lt;a href="https://nixos.org/">NixOS and Nix&lt;/a> in general.
I have set it up as my &lt;a href="https://github.com/tymscar/dotfiles">main OS on my desktop&lt;/a>, I have used it on remote VPS instances, and I have used it for local projects as well in the shape of nix environments.&lt;/p></description></item><item><title>Hack The Midlands CTF 2021</title><link>/posts/hackthemidlandsctf2021/</link><pubDate>Sun, 31 Oct 2021 18:12:13 +0100</pubDate><guid>/posts/hackthemidlandsctf2021/</guid><description>&lt;p>&lt;a href="https://hackthemidlands.com/">HackTheMidlands&lt;/a> is a 24-hour hackathon, or “creative marathon”, which was founded in 2016.
I used to participate back in the day, and I&amp;rsquo;ve even won a prize before, &lt;a href="https://www.youtube.com/watch?v=mvLXkCgsXik">here&lt;/a> you can find a video about it! 📷&lt;/p>
&lt;h3 id="ctfs">CTFs🏁:&lt;/h3>
&lt;p>Being a programmer at heart I&amp;rsquo;ve never played seriously with &lt;a href="https://www.hackthebox.com/blog/what-is-ctf">capture the flag&lt;/a> challenges before, but because I am busy with work I did not have the time and energy to participate in the coding part of the hackathon, so I thought I&amp;rsquo;ll give the CTF a try! It was a lot of fun for someone starting out with CTFs but with a good grasp of &lt;code>*nix&lt;/code> systems, programming, and web development!&lt;/p></description></item></channel></rss>