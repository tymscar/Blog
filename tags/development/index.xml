<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on The Tymscar Blog</title><link>/tags/development/</link><description>Recent content in Development on The Tymscar Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 02 May 2025 16:50:41 +0000</lastBuildDate><atom:link href="/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Nix to build JS/TS projects with private dependencies</title><link>/posts/nixprivatenpmrepos/</link><pubDate>Fri, 02 May 2025 16:50:41 +0000</pubDate><guid>/posts/nixprivatenpmrepos/</guid><description>&lt;p>&lt;img src="/nix-private-npm-repos/githubActioonsSuccess.png" alt="“Running code from a private repo”)">&lt;/p>
&lt;p>Nix is a great tool for building software, especially in professional settings because of the guarantees it comes with.&lt;br>
For example, you can be sure that the software you build is reproducible and that it will work on any machine.&lt;/p>
&lt;p>When it comes to building packages in the Nix world, you usually end up going with derivation builders already made for you.&lt;/p>
&lt;p>For Rust there is &lt;code>rustPlatform.buildRustPackage&lt;/code>, for Go there is &lt;code>go2nix&lt;/code>, for JS/TS there is &lt;code>node2nix&lt;/code>, and so on.&lt;/p></description></item><item><title>I wrote my Vision Pro killer app (Script Anchor)</title><link>/posts/scriptanchor/</link><pubDate>Sun, 21 Apr 2024 12:00:00 +0000</pubDate><guid>/posts/scriptanchor/</guid><description>&lt;h1 id="ive-always-like-vr">I&amp;rsquo;ve always like VR&lt;/h1>
&lt;p>For 15 years, I&amp;rsquo;ve been captivated by the possibilities of VR/AR. It all became real when I held my first Google Cardboard at Google I/O 2015—here&amp;rsquo;s the moment captured:&lt;/p>
&lt;p>&lt;img src="/script-anchor/google-cardboard.jpg" alt="My Google Cardboard">&lt;/p>
&lt;p>My professional and personal life has been deeply intertwined with virtual reality. I spent five fulfilling years harnessing VR&amp;rsquo;s potential at JLR, and for my Bachelor of Science First Class Honours degree at BCU, I pioneered an augmented reality project that allowed users to overlay virtual attractions onto the real world. Even outside of work, I&amp;rsquo;ve remained an avid VR enthusiast, frequently engaging with the best headsets out there, from the industry-celebrated Microsoft Hololens to the impressive capabilities of the less known Pimax 8K.&lt;/p></description></item><item><title>Simulating soapy water</title><link>/posts/soapsim/</link><pubDate>Thu, 04 Apr 2024 12:00:00 +0000</pubDate><guid>/posts/soapsim/</guid><description>&lt;p>Do you ever just scroll mindlessly online and stumble upon a satisfying video about physics and you can&amp;rsquo;t help but have that urge to reproduce it in code?&lt;/p>
&lt;p>No, just me? Well perhaps this blogpost isn&amp;rsquo;t for you then. Otherwise, buckle up!&lt;/p>
&lt;p>The experiment that caught my eye this time around was this video of a plate of water, with some pepper sprinkled on top uniformly, that when touched with a soapy finger, makes the pepper repel.&lt;/p></description></item><item><title>How to fix WSL2 crashing mid compile (Or any heavy IO)</title><link>/posts/wsloom/</link><pubDate>Tue, 30 Jan 2024 12:00:00 +0000</pubDate><guid>/posts/wsloom/</guid><description>&lt;p>Reminiscing with some friends about how long the compile times were on Gentoo back in the day when we used it, I got curious about how long it would take to compile Chromium today in WSL2 on an &lt;a href="https://www.intel.com/content/www/us/en/products/sku/230497/intel-core-i913900kf-processor-36m-cache-up-to-5-80-ghz/specifications.html">i9 13900KF CPU&lt;/a>. Back then, it used to take well over a day on my &lt;a href="https://ark.intel.com/content/www/us/en/ark/products/68316/intel-core-i5-3470-processor-6m-cache-up-to-3-60-ghz.html">i5 3470&lt;/a>.&lt;/p>
&lt;h1 id="getting-chromium-to-compile">Getting Chromium to compile&lt;/h1>
&lt;p>All you have to do to compile Chromium is follow the official Google build instructions &lt;a href="https://chromium.googlesource.com/chromium/src/&amp;#43;/main/docs/linux/build_instructions.md">here&lt;/a>:&lt;/p></description></item><item><title>Critical Alert - Tech Industry Must Act on Job Market Chaos!</title><link>/posts/jobhunting/</link><pubDate>Wed, 10 Jan 2024 12:31:42 +0000</pubDate><guid>/posts/jobhunting/</guid><description>&lt;h1 id="applying-to-a-job-is-a-broken-system">Applying to a job is a broken system&lt;/h1>
&lt;p>This blog post is a call to action, urging reform in the tech recruitment process. It&amp;rsquo;s a shared struggle, demanding change for a more efficient and promising future in our industry.&lt;/p>
&lt;h4 id="being-genuine-is-not-encouraged">Being genuine is not encouraged&lt;/h4>
&lt;p>&lt;img src="https://images.unsplash.com/photo-1434030216411-0b793f4b4173" alt="Cover letter">&lt;/p>
&lt;p>In the tech recruiting scene, a significant emphasis is placed on writing personalized cover letters. However, these letters, requiring genuine and thoughtful effort, are time-intensive to compose, sometimes demanding as much time as a full-time job, just for a chance at being noticed.&lt;/p></description></item><item><title>How I deploy private GitHub projects to local self-hosted servers (CI/CD)</title><link>/posts/privategithubcicd/</link><pubDate>Sat, 12 Aug 2023 18:04:45 +0100</pubDate><guid>/posts/privategithubcicd/</guid><description>&lt;h1 id="how-i-deploy-private-github-projects-to-local-self-hosted-servers-cicd">How I deploy private GitHub projects to local self-hosted servers (CI/CD)&lt;/h1>
&lt;p>I have a lot of experience with massive CI/CD pipelines that deploy private code to public servers. I&amp;rsquo;ve also worked with pipelines that deploy public repositories to private servers, such as my homelab. However, I never experimented with a pipeline that takes a private GitHub repo, builds it, and deploys it to a server on the LAN. That&amp;rsquo;s precisely what I needed for a project I&amp;rsquo;m currently working on that isn&amp;rsquo;t yet public.&lt;/p></description></item><item><title>Running Jetbrains remote dev servers on NixOS</title><link>/posts/jetbrainsremotedevservernixos/</link><pubDate>Mon, 10 Jul 2023 00:33:45 +0100</pubDate><guid>/posts/jetbrainsremotedevservernixos/</guid><description>&lt;p>&lt;img src="/jb-nix-remote-server/project.png" alt="A remote project">&lt;/p>
&lt;p>EDIT: I have raised &lt;a href="https://github.com/NixOS/nixpkgs/pull/243533">a PR to fix this&lt;/a> upstream and got it merged, so you don&amp;rsquo;t have to follow the guide anymore, you can just use the package on nixpkgs unstable for the time being and later on in the future, a stable branch.&lt;/p>
&lt;p>For the past year or so I have been very interested in &lt;a href="https://nixos.org/">NixOS and Nix&lt;/a> in general.
I have set it up as my &lt;a href="https://github.com/tymscar/dotfiles">main OS on my desktop&lt;/a>, I have used it on remote VPS instances, and I have used it for local projects as well in the shape of nix environments.&lt;/p></description></item></channel></rss>