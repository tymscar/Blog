<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on The Tymscar Blog</title><link>/tags/linux/</link><description>Recent content in Linux on The Tymscar Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 15 Jun 2025 21:39:22 +0100</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Public Dotfiles, Private Secrets: My Nix OS Docker Workflow</title><link>/posts/nixosdockerwithsecrets/</link><pubDate>Sun, 15 Jun 2025 21:39:22 +0100</pubDate><guid>/posts/nixosdockerwithsecrets/</guid><description>&lt;p>For the longest time I ran every container in my homelab on Proxmox. It did the job, but because I use NixOS on my main workstation and NixDarwin on my laptop, I eventually wanted the lab to follow the same declarative model. A few months ago I switched those machines to NixOS as well. Everything went smoothly except for one thing: moving the containers themselves.&lt;/p>
&lt;p>The problem was secrets. I keep my entire configuration, including the lab, in a public &lt;a href="https://github.com/tymscar/dotfiles">dotfiles repository&lt;/a>. Many of the containers need tokens such as Cloudflare, API keys, you name it, that obviously must not end up on GitHub. Every time I sat down to migrate the stack I put it off for this single reason.&lt;/p></description></item><item><title>Using Nix to build JS/TS projects with private dependencies</title><link>/posts/nixprivatenpmrepos/</link><pubDate>Fri, 02 May 2025 16:50:41 +0000</pubDate><guid>/posts/nixprivatenpmrepos/</guid><description>&lt;p>&lt;img src="/nix-private-npm-repos/githubActioonsSuccess.png" alt="“Running code from a private repo”)">&lt;/p>
&lt;p>Nix is a great tool for building software, especially in professional settings because of the guarantees it comes with.&lt;br>
For example, you can be sure that the software you build is reproducible and that it will work on any machine.&lt;/p>
&lt;p>When it comes to building packages in the Nix world, you usually end up going with derivation builders already made for you.&lt;/p>
&lt;p>For Rust there is &lt;code>rustPlatform.buildRustPackage&lt;/code>, for Go there is &lt;code>go2nix&lt;/code>, for JS/TS there is &lt;code>node2nix&lt;/code>, and so on.&lt;/p></description></item><item><title>How I deploy private GitHub projects to local self-hosted servers (CI/CD)</title><link>/posts/privategithubcicd/</link><pubDate>Sat, 12 Aug 2023 18:04:45 +0100</pubDate><guid>/posts/privategithubcicd/</guid><description>&lt;h1 id="how-i-deploy-private-github-projects-to-local-self-hosted-servers-cicd">How I deploy private GitHub projects to local self-hosted servers (CI/CD)&lt;/h1>
&lt;p>I have a lot of experience with massive CI/CD pipelines that deploy private code to public servers. I&amp;rsquo;ve also worked with pipelines that deploy public repositories to private servers, such as my homelab. However, I never experimented with a pipeline that takes a private GitHub repo, builds it, and deploys it to a server on the LAN. That&amp;rsquo;s precisely what I needed for a project I&amp;rsquo;m currently working on that isn&amp;rsquo;t yet public.&lt;/p></description></item><item><title>Running Jetbrains remote dev servers on NixOS</title><link>/posts/jetbrainsremotedevservernixos/</link><pubDate>Mon, 10 Jul 2023 00:33:45 +0100</pubDate><guid>/posts/jetbrainsremotedevservernixos/</guid><description>&lt;p>&lt;img src="/jb-nix-remote-server/project.png" alt="A remote project">&lt;/p>
&lt;p>EDIT: I have raised &lt;a href="https://github.com/NixOS/nixpkgs/pull/243533">a PR to fix this&lt;/a> upstream and got it merged, so you don&amp;rsquo;t have to follow the guide anymore, you can just use the package on nixpkgs unstable for the time being and later on in the future, a stable branch.&lt;/p>
&lt;p>For the past year or so I have been very interested in &lt;a href="https://nixos.org/">NixOS and Nix&lt;/a> in general.
I have set it up as my &lt;a href="https://github.com/tymscar/dotfiles">main OS on my desktop&lt;/a>, I have used it on remote VPS instances, and I have used it for local projects as well in the shape of nix environments.&lt;/p></description></item><item><title>Hack The Midlands CTF 2021</title><link>/posts/hackthemidlandsctf2021/</link><pubDate>Sun, 31 Oct 2021 18:12:13 +0100</pubDate><guid>/posts/hackthemidlandsctf2021/</guid><description>&lt;p>&lt;a href="https://hackthemidlands.com/">HackTheMidlands&lt;/a> is a 24-hour hackathon, or “creative marathon”, which was founded in 2016.
I used to participate back in the day, and I&amp;rsquo;ve even won a prize before, &lt;a href="https://www.youtube.com/watch?v=mvLXkCgsXik">here&lt;/a> you can find a video about it! 📷&lt;/p>
&lt;h3 id="ctfs">CTFs🏁:&lt;/h3>
&lt;p>Being a programmer at heart I&amp;rsquo;ve never played seriously with &lt;a href="https://www.hackthebox.com/blog/what-is-ctf">capture the flag&lt;/a> challenges before, but because I am busy with work I did not have the time and energy to participate in the coding part of the hackathon, so I thought I&amp;rsquo;ll give the CTF a try! It was a lot of fun for someone starting out with CTFs but with a good grasp of &lt;code>*nix&lt;/code> systems, programming, and web development!&lt;/p></description></item></channel></rss>